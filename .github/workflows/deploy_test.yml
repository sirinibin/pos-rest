name: Build and Deploy Go Application to test

on:
  push:
    branches:
      - test # Change to your test branch
    paths:
      - '**.go'
      - '**.mod'
      - '**.sum'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Go
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.20.5'

     
      - name: Clean Go cache
        run: go clean -cache -modcache -i -r
      - name: Clean Build Directory
        run: rm -rf ./bin ./build ./pos-rest
      - name: Clear GitHub Actions Cache
        uses: actions/cache@v3
        with:
          path: ./build
          key: ${{ runner.os }}-build-${{ github.run_id }}
     # Step 3: Install dependencies and build
      - name: Install dependencies 
        run: |
          go mod tidy
     # Step 3: Install dependencies and build
      - name: Building
        run: |
          go build -ldflags="-X 'main.version=${{ github.sha }}'"  -o pos-rest
      - name: Log Build Checksum
        run: sha256sum ./pos-rest

      # Deploy to the EC2 server
      - name: Deploy and restart service
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Stop the service if it's running
            sudo systemctl stop start-api-test || true
        
            # Deploy the new binary
            scp -o StrictHostKeyChecking=no ./pos-rest ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }}:${{secrets.AWS_GO_API_TEST_DEST_PATH}}
            # Ensure proper permissions
            chmod +x ${{secrets.AWS_GO_API_TEST_DEST_PATH}}/pos-rest
            sudo systemctl start start-api-test || true


      # Verify the service status
      - name: Verify service status
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
           sudo systemctl status start-api-test
     